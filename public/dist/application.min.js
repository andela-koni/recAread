"use strict";var ApplicationConfiguration=function(){var applicationModuleName="bookapp",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("books"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("users"),angular.module("books").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Books","books","dropdown","/books(/create)?"),Menus.addSubMenuItem("topbar","books","List Books","books"),Menus.addSubMenuItem("topbar","books","New Book","books/create")}]),angular.module("books").config(["$stateProvider",function($stateProvider){$stateProvider.state("listBooks",{url:"/books",templateUrl:"modules/books/views/list-books.client.view.html"}).state("createBook",{url:"/books/create",templateUrl:"modules/books/views/create-book.client.view.html"}).state("viewBook",{url:"/books/:bookId",templateUrl:"modules/books/views/view-book.client.view.html"}).state("editBook",{url:"/books/:bookId/edit",templateUrl:"modules/books/views/edit-book.client.view.html"})}]),angular.module("books").controller("BooksController",["$scope","$stateParams","$location","Authentication","Books","Reviews","Likes","$timeout",function($scope,$stateParams,$location,Authentication,Books,Reviews,Likes,$timeout){$scope.authentication=Authentication,$scope.liked=!1,$scope.showReview=!1,$scope.fileUpload=function(){{var fileInput=document.getElementById("fileInput");document.getElementById("fileDisplayArea")}fileInput.addEventListener("change",function(e){var files=e.target.files;if(files&&null!==files[0]){var reader=new FileReader;reader.onload=function(){$scope.response=reader.result},reader.readAsDataURL(files[0])}$timeout(function(){$scope.image=$scope.response},1e3)})},$scope.create=function(){var book=new Books({title:this.title,author:this.author,genre:this.genre,publishedDate:this.publishedDate,description:this.description,image:$scope.image});book.$save(function(response){$location.path("books/"+response._id),$scope.title="",$scope.author="",$scope.genre="",$scope.publishedDate="",$scope.description=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(book){if(book){book.$remove();for(var i in $scope.books)$scope.books[i]===book&&$scope.books.splice(i,1)}else $scope.book.$remove(function(){$location.path("books/create")})},$scope.update=function(){var book=$scope.book;book.$update(function(){$location.path("books/"+book._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.books=Books.query()},$scope.findOne=function(){$scope.book=Books.get({bookId:$stateParams.bookId},function(){$scope.likes=$scope.book.likes.length})},$scope.createReview=function(){var review=new Reviews({bookId:$scope.book._id,reviewText:$scope.reviewText});review.$save(function(response){$scope.book=response,$scope.reviewText=""},function(errorResponse){$scope.error=errorResponse.data.message}),$scope.showReview=!1},$scope.deleteReview=function(review){new Reviews({bookId:$scope.book._id,_id:review._id,reviewer:review.reviewer});review.$remove(function(response){$scope.book=response})},$scope.checkLikes=function(){var likes=$scope.book.likes;for(var i in likes)if(likes[i].user===$scope.authentication.user._id)return $scope.liked=!0,!0;return!1},$scope.removeError=function(){$scope.likeError=null},$scope.likeBook=function(){var like=new Likes({bookId:$stateParams.bookId,likes:1});like.$save(function(response){$scope.book=response,$scope.liked=!0,$scope.likes=$scope.book.likes.length},function(errorResponse){$scope.likeError=errorResponse.data.message})}}]),angular.module("books").factory("Books",["$resource",function($resource){return $resource("books/:bookId",{bookId:"@_id"},{update:{method:"PUT"}})}]),angular.module("books").factory("Reviews",["$resource",function($resource){return $resource("books/:bookId/reviews/:reviewId",{bookId:"@bookId",reviewId:"@_id"},{update:{method:"POST"}})}]),angular.module("books").factory("Likes",["$resource",function($resource){return $resource("books/:bookId/like",{bookId:"@bookId"},{update:{method:"PUT"}})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]).run(["$rootScope",function($rootScope){$rootScope.$on("$stateChangeSuccess",function(){$("html, body").animate({scrollTop:0},200)})}]),angular.module("core").controller("HomeController",["$scope","Authentication","$timeout",function($scope,Authentication,$timeout){$scope.authentication=Authentication,$scope.quoteInterval=7e3,$scope.myInterval=5e3,$scope.quotes=['"So many books, so little time"','"A reader lives a thousand lives before he dies, said Jojen. The man who never reads lives only one"','"If you can make a woman laugh, you can make her do anything"','"All extremes of feelings are allied with madness"','"It does not do to dwell on dreams and forget to live"','"I am not afraid of death, I just want to be there when it happens"'],$scope.slides=["modules/core/img/brand/backImage.jpg","modules/core/img/brand/backImage2.jpg"],$scope._Index=0,$scope._qIndex=0,$scope.isActive=function(index){return $scope._Index===index},$scope.isActiveQ=function(index){return $scope._qIndex===index},$scope.showPrev=function(){$scope._Index=$scope._Index>0?--$scope._Index:$scope.slides.length-1},$scope.showPrevQ=function(){$scope._qIndex=$scope._qIndex>0?--$scope._qIndex:$scope.slides.length-1},$scope.showNext=function(){$scope._Index=$scope._Index<$scope.slides.length-1?++$scope._Index:0,$timeout($scope.showNext,$scope.myInterval)},$scope.showNextQuote=function(){$scope._qIndex=$scope._qIndex<$scope.quotes.length-1?++$scope._qIndex:0,$timeout($scope.showNextQuote,$scope.quoteInterval)},$scope.loadSlides=function(){$timeout($scope.showNext,$scope.myInterval)},$scope.loadQuotes=function(){$timeout($scope.showNextQuote,$scope.quoteInterval)},$scope.loadSlides(),$scope.loadQuotes()}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invlaid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);